https://github.com/mitmproxy/mitmproxy/tree/master/examples/simple
-> examplex for scripts that can induce some kind of chaos

the plan is to use the transparent functionality of mitmproxy and install it as a daemonset on all nodes.
then the target containers have to be configured to have http and https proxy over mitmproxy-pod on their node.
if https is used, certificates have to be installed on the target container, otherwise it will not trust the proxy.
this could be done via configmap.

https://docs.mitmproxy.org/stable/tools-mitmdump/ is the CLI tool for the proxy. idea: setup proxy pod and run
a script with mitmdump -s script.py

https://mitmproxy.readthedocs.io/en/v2.0.2/transparent/linux.html explains how transparent mode is net up


https://github.com/ii/kube-apisnoop/tree/master/charts/tproxy

for starting a docker container with a proxy:
args:
  - "-http_proxy=mitmproxy"

change the default gateway on linux:
ip route del default 
ip route add default via 192.168.130.3


kubectl set env
env:
- name: NODE_NAME
  valueFrom:
    fieldRef:
      fieldPath: spec.nodeName
- name: http_proxy
  value: $(NODE_NAME):1080
- name: https_proxy
  value: $(NODE_NAME):1080
